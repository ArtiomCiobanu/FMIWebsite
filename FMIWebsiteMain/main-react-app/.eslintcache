[{"C:\\git\\NewsWebsite\\FMIWebsiteMain\\main-react-app\\src\\index.js":"1","C:\\git\\NewsWebsite\\FMIWebsiteMain\\main-react-app\\src\\App.js":"2","C:\\git\\NewsWebsite\\FMIWebsiteMain\\main-react-app\\src\\reportWebVitals.js":"3","C:\\git\\NewsWebsite\\FMIWebsiteMain\\main-react-app\\src\\components\\NavBar.jsx":"4","C:\\git\\NewsWebsite\\FMIWebsiteMain\\main-react-app\\src\\components\\Posts.jsx":"5"},{"size":551,"mtime":1620214923472,"results":"6","hashOfConfig":"7"},{"size":3001,"mtime":1620226339584,"results":"8","hashOfConfig":"7"},{"size":375,"mtime":1620214530066,"results":"9","hashOfConfig":"7"},{"size":2414,"mtime":1620225051228,"results":"10","hashOfConfig":"7"},{"size":984,"mtime":1620226402257,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1luw4nm",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\git\\NewsWebsite\\FMIWebsiteMain\\main-react-app\\src\\index.js",[],["24","25"],"C:\\git\\NewsWebsite\\FMIWebsiteMain\\main-react-app\\src\\App.js",["26","27"],"C:\\git\\NewsWebsite\\FMIWebsiteMain\\main-react-app\\src\\reportWebVitals.js",[],"C:\\git\\NewsWebsite\\FMIWebsiteMain\\main-react-app\\src\\components\\NavBar.jsx",["28"],"import React, { useState } from \"react\";\r\nimport { Layout, Button, Modal, Input, Typography, message } from \"antd\";\r\n\r\nconst { Header } = Layout;\r\nconst { Text } = Typography;\r\n\r\nexport const NavBar = () => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [emailValue, setEmailValue] = useState(\"\");\r\n  const [passwordValue, setPasswordValue] = useState(\"\");\r\n  const [emailValidation, setEmailValidation] = useState(false);\r\n  const [passwordValidation, setPasswordValidation] = useState(false);\r\n\r\n  const validationHandle = () => {\r\n    if (emailValue === \"\") {\r\n      setEmailValidation(true);\r\n    } else {\r\n      setEmailValidation(false);\r\n    }\r\n    if (passwordValue === \"\") {\r\n      setPasswordValidation(true);\r\n    } else {\r\n      setPasswordValidation(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Header\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n      }}\r\n    >\r\n      <div className=\"logo\" />\r\n      <Button\r\n        type=\"primary\"\r\n        size=\"large\"\r\n        onClick={() => setIsModalVisible(true)}\r\n      >\r\n        Войти\r\n      </Button>\r\n      <Modal\r\n        title=\"FMI Student\"\r\n        visible={isModalVisible}\r\n        onCancel={() => setIsModalVisible(false)}\r\n        footer={[\r\n          <Button key=\"enter\" type=\"primary\" onClick={validationHandle}>\r\n            Войти\r\n          </Button>,\r\n          <span className=\"mr-8\">или</span>,\r\n          <Button key=\"register\" className=\"mr-8\" onClick={validationHandle}>\r\n            Зарегистрироваться\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Text>Email</Text>\r\n        <Input\r\n          value={emailValue}\r\n          placeholder=\"Enter email\"\r\n          onChange={(e) => setEmailValue(e.target.value)}\r\n        />\r\n        {emailValidation && (\r\n          <>\r\n            <Typography.Text type=\"danger\">*Enter email</Typography.Text>\r\n            <br />\r\n          </>\r\n        )}\r\n        <Text>Password</Text>\r\n        <Input.Password\r\n          value={passwordValue}\r\n          placeholder=\"Enter password\"\r\n          onChange={(e) => setPasswordValue(e.target.value)}\r\n        />\r\n        {passwordValidation && (\r\n          <>\r\n            <Typography.Text type=\"danger\">*Enter password</Typography.Text>\r\n            <br />\r\n          </>\r\n        )}\r\n      </Modal>\r\n    </Header>\r\n  );\r\n};\r\n","C:\\git\\NewsWebsite\\FMIWebsiteMain\\main-react-app\\src\\components\\Posts.jsx",["29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":6,"column":9,"nodeType":"36","messageId":"37","endLine":6,"endColumn":15},{"ruleId":"34","severity":1,"message":"38","line":6,"column":26,"nodeType":"36","messageId":"37","endLine":6,"endColumn":32},{"ruleId":"34","severity":1,"message":"39","line":2,"column":52,"nodeType":"36","messageId":"37","endLine":2,"endColumn":59},{"ruleId":"40","severity":1,"message":"41","line":20,"column":22,"nodeType":"42","endLine":20,"endColumn":34},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'Header' is assigned a value but never used.","Identifier","unusedVar","'Footer' is assigned a value but never used.","'message' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]